<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.yqfw.corp.dao.WarnRuleMapper" >
  <resultMap id="BaseResultMap" type="com.gsccs.yqfw.corp.model.WarnRule" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="VARCHAR" />
    <result column="rule" property="rule" jdbcType="VARCHAR" />
    <result column="threshold" property="threshold" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    
    <!-- 不保存表中 -->
    <result column="typename" property="typename" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type_id, rule, threshold,state, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gsccs.yqfw.corp.model.WarnRuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yqfw_warn_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  <select id="selectPageByExample" resultMap="BaseResultMap" parameterType="com.gsccs.yqfw.corp.model.WarnRuleExample" >
    select 
    	distinct id, type_id, rule, threshold, state,remark, typename,unit
    from 
    (	select 
    		a.*,b.title as typename,b.unit 
    	from 
  			yqfw_warn_rule a, yqfw_monit_type b
  		where 
  			a.type_id = b.id) aa
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    
    limit ${skip},${pageSize}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from yqfw_warn_rule
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from yqfw_warn_rule
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.gsccs.yqfw.corp.model.WarnRuleExample" >
    delete from yqfw_warn_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gsccs.yqfw.corp.model.WarnRule" >
    insert into yqfw_warn_rule (id, type_id, rule, 
      threshold,state, remark)
    values (#{id,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{rule,jdbcType=VARCHAR}, 
      #{threshold,jdbcType=DECIMAL}, 
      #{state,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR})
  </insert>
  
  <select id="countByExample" parameterType="com.gsccs.yqfw.corp.model.WarnRuleExample" resultType="java.lang.Integer" >
    select count(*) from yqfw_warn_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update yqfw_warn_rule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
      <if test="record.rule != null" >
        rule = #{record.rule,jdbcType=VARCHAR},
      </if>
      <if test="record.threshold != null" >
        threshold = #{record.threshold,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update yqfw_warn_rule
    set id = #{record.id,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=VARCHAR},
      rule = #{record.rule,jdbcType=VARCHAR},
      threshold = #{record.threshold,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gsccs.yqfw.corp.model.WarnRule" >
    update yqfw_warn_rule
    <set >
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="rule != null" >
        rule = #{rule,jdbcType=VARCHAR},
      </if>
      <if test="threshold != null" >
        threshold = #{threshold,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="com.gsccs.yqfw.corp.model.WarnRule" >
    update yqfw_warn_rule
    set type_id = #{typeId,jdbcType=VARCHAR},
      rule = #{rule,jdbcType=VARCHAR},
      threshold = #{threshold,jdbcType=DECIMAL},
      state = #{state,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
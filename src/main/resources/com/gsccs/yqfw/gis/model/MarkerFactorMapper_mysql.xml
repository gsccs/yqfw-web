<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.yqfw.gis.dao.MarkerFactorMapper">
	
	<resultMap id="BaseResultMap" type="com.gsccs.yqfw.gis.model.MarkerFactor">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="icon" property="icon" jdbcType="VARCHAR" />
		<result column="classfy" property="classfy" jdbcType="VARCHAR" />
		<result column="fillcolor" property="fillcolor" jdbcType="VARCHAR" />
    	<result column="linecolor" property="linecolor" jdbcType="VARCHAR" />
    	<result column="weight" property="weight" jdbcType="INTEGER" />
    	<result column="opacity" property="opacity" jdbcType="FLOAT" />
	</resultMap>
	
	
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, title, state, remark, icon, classfy, linecolor,fillcolor,weight,opacity
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.gsccs.yqfw.gis.model.MarkerFactorExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from yqfw_marker_factor
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>


	<select id="selectPageByExample" resultMap="BaseResultMap"
		parameterType="com.gsccs.yqfw.gis.model.MarkerFactorExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from yqfw_marker_factor
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit ${skip},${pageSize}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from yqfw_marker_factor
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from yqfw_marker_factor
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteByExample" parameterType="com.gsccs.yqfw.gis.model.MarkerFactorExample">
		delete from yqfw_marker_factor
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	
	<insert id="insert" parameterType="com.gsccs.yqfw.gis.model.MarkerFactor">
		insert into yqfw_marker_factor (id, title, state,
		remark, icon, linecolor,fillcolor,weight,opacity
		classfy)
		values (#{id,jdbcType=VARCHAR}, 
		#{title,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR}, 
		#{icon,jdbcType=VARCHAR}, 
		#{linecolor,jdbcType=VARCHAR},
		#{fillcolor,jdbcType=VARCHAR},
		#{weight,jdbcType=INTEGER},
		#{opacity,jdbcType=FLOAT},
		#{classfy,jdbcType=VARCHAR})
	</insert>

	<select id="countByExample" parameterType="com.gsccs.yqfw.gis.model.MarkerFactorExample"
		resultType="java.lang.Integer">
		select count(*) from yqfw_marker_factor
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<update id="updateByExample" parameterType="map">
		update yqfw_marker_factor
		set id = #{record.id,jdbcType=VARCHAR},
		title = #{record.title,jdbcType=VARCHAR},
		state = #{record.state,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR},
		icon = #{record.icon,jdbcType=VARCHAR},
		linecolor = #{record.linecolor,jdbcType=VARCHAR},
		fillcolor = #{record.fillcolor,jdbcType=VARCHAR},
		weight = #{record.weight,jdbcType=INTEGER},
		opacity = #{record.opacity,jdbcType=FLOAT},
		classfy = #{record.classfy,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<update id="updateByPrimaryKey" parameterType="com.gsccs.yqfw.gis.model.MarkerFactor">
		update yqfw_marker_factor
		set title = #{title,jdbcType=VARCHAR},
		state = #{state,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		icon = #{icon,jdbcType=VARCHAR},
		linecolor = #{linecolor,jdbcType=VARCHAR},
		fillcolor = #{fillcolor,jdbcType=VARCHAR},
		weight = #{weight,jdbcType=INTEGER},
		opacity = #{opacity,jdbcType=FLOAT},
		classfy = #{classfy,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>